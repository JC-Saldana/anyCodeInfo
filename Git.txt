# example of how to remove a file that is staged by mistake
$ git rm --cached about.html

git remote -v para comprobar origen

git clone = init + remote add + fetch + checkout
first push should be git push origin master

git merge bugFix introduce bugFix en rama main
git rebase main desde bugFix añade cambios a main

git detached head es tener HEAD en commit en vez de rama

git checkout main^ - mueve head 1 commit atrás
git branch -f main HEAD^ - mueve main commit atrás
git branch -f bugFix HEAD^ - mueve bugFix 1 commit atrás
HEAD~3 - para mover varios commit en vez de ^

git reset HEAD~1 elimina último commit y vuelve al anterior
git revert HEAD - crea un commit que elimina cambios del último commit. Se puede pushear para quitar cambios del último commit

////////

Config
$ git config --global user.name "[name]"
$ git config --global user.email "[email address]"

Initialize a repository
$ git init

View changes in the repository
$ git status

Adding file
$ git add <file-name>

Add all files
$ git add .

Saving files
$ git commit -m"<commit-message>"

View changes history
$ git log

Add a remote repository
$ git remote add <alias> <github-url>

Pushing to Remote Repository
$ git push <alias> <remote-branch-name>

Pull changes from GitHub
$ git pull <alias> <remote-branch-name>

Cheat sheet: 
https://training.github.com/downloads/github-git-cheat-sheet/


Para ver mejor
$ git log --all --graph --oneline

Squash: 
git checkout "primer commit"
git rebase -i HEAD 


en último commit (rama) usar git rebase -i ${id-del-commit}
los primeros poner pick, los inferiores squash

git log --oneline

esc : wq
git rebase

git reset --hard hash -> retrocede y quita cambios
git reset --soft hash -> retrocede y no quita cambios

git --force push -> necesario tras rebase

para solucionar mal commit: 
git reset --hard "hash del buen commit"
git add / commit / push --force


Añadir proyecto existente a repositorio:
	- Git init
	- Git add *
	- Git commit -m "first commit"
	- Git remote add origin <remote repo URL>
	- Git remote -v
	-  Git push --set-upstream origin master

Git branch -a para ver ramas remotas